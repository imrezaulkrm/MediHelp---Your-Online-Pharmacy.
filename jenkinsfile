pipeline {
    agent any

    environment {
        DOCKER_REPO = 'imrezaulkrm/final-project'
        BUILD_NUMBER_TAG = "${BUILD_NUMBER}"
        BUILD_DATE_TAG = sh(script: 'date "+%Y%m%d%H%M%S"', returnStdout: true).trim()
    }

    stages {
        stage('Source Code Pull from GitHub') {
            steps {
                git branch: 'main', url: 'https://github.com/imrezaulkrm/final-project.git'
            }
        }

        stage('Build') {
    steps {
        script {
            // Build and tag Docker images
            sh "docker-compose build --build-arg BUILD_DATE=${BUILD_DATE}"
            sh "docker tag imrezaulkrm/final-project:web-${BUILD_NUMBER}-${BUILD_DATE} imrezaulkrm/final-project:web-${BUILD_NUMBER}-${BUILD_DATE}"
            sh "docker tag imrezaulkrm/final-project:db-${BUILD_NUMBER}-${BUILD_DATE} imrezaulkrm/final-project:db-${BUILD_NUMBER}-${BUILD_DATE}"
            sh "docker tag imrezaulkrm/final-project:phpmyadmin-${BUILD_NUMBER}-${BUILD_DATE} imrezaulkrm/final-project:phpmyadmin-${BUILD_NUMBER}-${BUILD_DATE}"
       		}
	   }
	}


        stage('Push') {
	    steps {
	        script {
	            withCredentials([usernamePassword(credentialsId: 'dockerhub', passwordVariable: 'docker_p', usernameVariable: 'docker_u')]) {
                // Log in to Docker Hub
	                sh "echo ${docker_p} | docker login --username ${docker_u} --password-stdin"

	                // Push the 'web' service
	                sh "docker push imrezaulkrm/final-project:web-${BUILD_NUMBER}-${BUILD_DATE}"

	                // Push the 'database' service
	                sh "docker push imrezaulkrm/final-project:db-${BUILD_NUMBER}-${BUILD_DATE}"

	                // Push the 'phpmyadmin' service
	                sh "docker push imrezaulkrm/final-project:phpmyadmin-${BUILD_NUMBER}-${BUILD_DATE}"

	                // Log out from Docker Hub
	                sh "docker logout"
	            }
	        }
	    }
	}

    }

    post {
        success {
            // Docker-compose all file down
            sh 'docker-compose down'
            // Clean Up Unused Images and Containers
            sh 'docker system prune -a'
        }
    }
}

